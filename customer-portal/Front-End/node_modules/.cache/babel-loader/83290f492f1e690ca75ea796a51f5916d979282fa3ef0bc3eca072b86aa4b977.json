{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tasha\\\\Downloads\\\\customer-portal (1)\\\\customer-portal\\\\Front-End\\\\src\\\\components\\\\EmployeeDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmployeeDashboard() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [showSubmitButton, setShowSubmitButton] = useState(null);\n  const [submittedTransactionId, setSubmittedTransactionId] = useState(null); // State to track the submitted transaction\n  const navigate = useNavigate();\n  useEffect(() => {\n    const authToken = localStorage.getItem('authToken');\n    if (!authToken) {\n      navigate('/employee-login');\n      return;\n    }\n    const fetchTransactions = async () => {\n      const response = await fetch('http://localhost:5000/api/transactions', {\n        headers: {\n          'Authorization': `Bearer ${authToken}`\n        }\n      });\n      const data = await response.json();\n      setTransactions(data);\n    };\n    fetchTransactions();\n  }, [navigate]);\n  const handleVerify = transactionId => {\n    // Change status to 'verifying' locally for the specific transaction\n    setTransactions(transactions.map(t => t.id === transactionId ? {\n      ...t,\n      status: 'verifying'\n    } : t));\n    setShowSubmitButton(transactionId);\n  };\n  const handleSubmitVerification = async transactionId => {\n    console.log(\"Submitting transaction ID:\", transactionId); // Debugging line\n\n    if (!transactionId) {\n      console.error(\"No transaction ID provided\");\n      return; // Early return if transactionId is not provided\n    }\n    const authToken = localStorage.getItem('authToken');\n    const response = await fetch(`http://localhost:5000/api/verify/${transactionId}`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${authToken}`\n      }\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Verified successfully!');\n      const updatedTransactions = transactions.map(t => t.id === transactionId ? {\n        ...t,\n        status: 'verified'\n      } : t);\n      setTransactions(updatedTransactions);\n      setShowSubmitButton(null); // Hide submit button after verification\n\n      // Set the transaction ID to show the submitted pop-up\n      setSubmittedTransactionId(transactionId);\n      console.log(\"Transaction successfully submitted:\", transactionId); // Debugging line\n    } else {\n      alert('Verification failed');\n      const updatedTransactions = transactions.map(t => t.id === transactionId ? {\n        ...t,\n        status: 'pending'\n      } : t);\n      setTransactions(updatedTransactions);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Employee Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          margin: 'auto',\n          borderCollapse: 'collapse',\n          width: '80%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Payee Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"SWIFT Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.currency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.payeeAccount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.swiftCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [transaction.status !== 'verified' && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleVerify(transaction.id),\n                style: {\n                  backgroundColor: 'green',\n                  color: 'white',\n                  marginRight: '8px'\n                },\n                children: \"Verify\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 41\n              }, this), showSubmitButton === transaction.id && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSubmitVerification(transaction.id),\n                style: {\n                  marginLeft: '8px'\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 41\n              }, this), submittedTransactionId === transaction.id && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'green',\n                  marginLeft: '10px',\n                  fontWeight: 'bold'\n                },\n                children: \"Submitted to SWIFT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)]\n          }, transaction.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeeDashboard, \"dRGkBQVIzEGOrXrG1lzvMJubG54=\", false, function () {\n  return [useNavigate];\n});\n_c = EmployeeDashboard;\nexport default EmployeeDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","EmployeeDashboard","_s","transactions","setTransactions","showSubmitButton","setShowSubmitButton","submittedTransactionId","setSubmittedTransactionId","navigate","authToken","localStorage","getItem","fetchTransactions","response","fetch","headers","data","json","handleVerify","transactionId","map","t","id","status","handleSubmitVerification","console","log","error","method","success","alert","updatedTransactions","style","display","justifyContent","alignItems","height","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","margin","borderCollapse","width","transaction","amount","currency","payeeAccount","swiftCode","onClick","backgroundColor","color","marginRight","marginLeft","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/tasha/Downloads/customer-portal (1)/customer-portal/Front-End/src/components/EmployeeDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction EmployeeDashboard() {\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [showSubmitButton, setShowSubmitButton] = useState(null);\r\n    const [submittedTransactionId, setSubmittedTransactionId] = useState(null); // State to track the submitted transaction\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const authToken = localStorage.getItem('authToken');\r\n        if (!authToken) {\r\n            navigate('/employee-login');\r\n            return;\r\n        }\r\n\r\n        const fetchTransactions = async () => {\r\n            const response = await fetch('http://localhost:5000/api/transactions', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${authToken}`\r\n                },\r\n            });\r\n            const data = await response.json();\r\n            setTransactions(data);\r\n        };\r\n\r\n        fetchTransactions();\r\n    }, [navigate]);\r\n\r\n    const handleVerify = (transactionId) => {\r\n        // Change status to 'verifying' locally for the specific transaction\r\n        setTransactions(transactions.map((t) =>\r\n            t.id === transactionId ? { ...t, status: 'verifying' } : t\r\n        ));\r\n        setShowSubmitButton(transactionId);\r\n    };\r\n\r\n    const handleSubmitVerification = async (transactionId) => {\r\n        console.log(\"Submitting transaction ID:\", transactionId); // Debugging line\r\n\r\n        if (!transactionId) {\r\n            console.error(\"No transaction ID provided\");\r\n            return; // Early return if transactionId is not provided\r\n        }\r\n\r\n        const authToken = localStorage.getItem('authToken');\r\n        const response = await fetch(`http://localhost:5000/api/verify/${transactionId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${authToken}`,\r\n            },\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (data.success) {\r\n            alert('Verified successfully!');\r\n            const updatedTransactions = transactions.map((t) =>\r\n                t.id === transactionId ? { ...t, status: 'verified' } : t\r\n            );\r\n            setTransactions(updatedTransactions);\r\n            setShowSubmitButton(null); // Hide submit button after verification\r\n\r\n            // Set the transaction ID to show the submitted pop-up\r\n            setSubmittedTransactionId(transactionId);\r\n            console.log(\"Transaction successfully submitted:\", transactionId); // Debugging line\r\n        } else {\r\n            alert('Verification failed');\r\n            const updatedTransactions = transactions.map((t) =>\r\n                t.id === transactionId ? { ...t, status: 'pending' } : t\r\n            );\r\n            setTransactions(updatedTransactions);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n            <div>\r\n                <h1 style={{ textAlign: 'center' }}>Employee Dashboard</h1>\r\n                <table style={{ margin: 'auto', borderCollapse: 'collapse', width: '80%' }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Amount</th>\r\n                            <th>Currency</th>\r\n                            <th>Payee Account</th>\r\n                            <th>SWIFT Code</th>\r\n                            <th>Status</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {transactions.map((transaction) => (\r\n                            <tr key={transaction.id}> {/* Unique key prop */}\r\n                                <td>{transaction.amount}</td>\r\n                                <td>{transaction.currency}</td>\r\n                                <td>{transaction.payeeAccount}</td>\r\n                                <td>{transaction.swiftCode}</td>\r\n                                <td>{transaction.status}</td>\r\n                                <td>\r\n                                    {transaction.status !== 'verified' && (\r\n                                        <button\r\n                                            onClick={() => handleVerify(transaction.id)}\r\n                                            style={{ backgroundColor: 'green', color: 'white', marginRight: '8px' }}\r\n                                        >\r\n                                            Verify\r\n                                        </button>\r\n                                    )}\r\n                                    {showSubmitButton === transaction.id && (\r\n                                        <button\r\n                                            onClick={() => handleSubmitVerification(transaction.id)}\r\n                                            style={{ marginLeft: '8px' }}\r\n                                        >\r\n                                            Submit\r\n                                        </button>\r\n                                    )}\r\n\r\n                                    {/* Pop-up message */}\r\n                                    {submittedTransactionId === transaction.id && (\r\n                                        <span\r\n                                            style={{\r\n                                                color: 'green',\r\n                                                marginLeft: '10px',\r\n                                                fontWeight: 'bold',\r\n                                            }}\r\n                                        >\r\n                                            Submitted to SWIFT\r\n                                        </span>\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmployeeDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}