{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alici\\\\Downloads\\\\customer-portal (2) (1)\\\\customer-portal (5)\\\\customer-portal (1)\\\\customer-portal\\\\Front-End\\\\src\\\\components\\\\EmployeeLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmployeeLogin() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  // Regex patterns\n  const usernameRegex = /^[a-zA-Z0-9]{3,20}$/;\n  const passwordRegex = /^[a-zA-Z0-9!@#$%^&*]{8,}$/;\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Client-side validation\n    if (!usernameRegex.test(username)) {\n      alert('Username must be 3-20 alphanumeric characters.');\n      return;\n    }\n    if (!passwordRegex.test(password)) {\n      alert('Password must be at least 8 characters and can include special characters.');\n      return;\n    }\n    const response = await fetch('http://localhost:5000/api/employee/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n    if (data.token) {\n      localStorage.setItem('authToken', data.token);\n      navigate('/employee-dashboard');\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeeLogin, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = EmployeeLogin;\nexport default EmployeeLogin;\nvar _c;\n$RefreshReg$(_c, \"EmployeeLogin\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","EmployeeLogin","_s","username","setUsername","password","setPassword","navigate","usernameRegex","passwordRegex","handleLogin","e","preventDefault","test","alert","response","fetch","method","headers","body","JSON","stringify","data","json","token","localStorage","setItem","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/alici/Downloads/customer-portal (2) (1)/customer-portal (5)/customer-portal (1)/customer-portal/Front-End/src/components/EmployeeLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction EmployeeLogin() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    // Regex patterns\r\n    const usernameRegex = /^[a-zA-Z0-9]{3,20}$/;\r\n    const passwordRegex = /^[a-zA-Z0-9!@#$%^&*]{8,}$/;\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Client-side validation\r\n        if (!usernameRegex.test(username)) {\r\n            alert('Username must be 3-20 alphanumeric characters.');\r\n            return;\r\n        }\r\n        if (!passwordRegex.test(password)) {\r\n            alert('Password must be at least 8 characters and can include special characters.');\r\n            return;\r\n        }\r\n\r\n        const response = await fetch('http://localhost:5000/api/employee/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username, password }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (data.token) {\r\n            localStorage.setItem('authToken', data.token);\r\n            navigate('/employee-dashboard');\r\n        } else {\r\n            alert('Invalid credentials');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleLogin}>\r\n            <input\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                placeholder=\"Username\"\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"Password\"\r\n            />\r\n            <button type=\"submit\">Login</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default EmployeeLogin;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMU,aAAa,GAAG,qBAAqB;EAC3C,MAAMC,aAAa,GAAG,2BAA2B;EAEjD,MAAMC,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAACJ,aAAa,CAACK,IAAI,CAACV,QAAQ,CAAC,EAAE;MAC/BW,KAAK,CAAC,gDAAgD,CAAC;MACvD;IACJ;IACA,IAAI,CAACL,aAAa,CAACI,IAAI,CAACR,QAAQ,CAAC,EAAE;MAC/BS,KAAK,CAAC,4EAA4E,CAAC;MACnF;IACJ;IAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;MACrEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAElB,QAAQ;QAAEE;MAAS,CAAC;IAC/C,CAAC,CAAC;IAEF,MAAMiB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,CAACE,KAAK,EAAE;MACZC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEJ,IAAI,CAACE,KAAK,CAAC;MAC7CjB,QAAQ,CAAC,qBAAqB,CAAC;IACnC,CAAC,MAAM;MACHO,KAAK,CAAC,qBAAqB,CAAC;IAChC;EACJ,CAAC;EAED,oBACId,OAAA;IAAM2B,QAAQ,EAAEjB,WAAY;IAAAkB,QAAA,gBACxB5B,OAAA;MACI6B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE3B,QAAS;MAChB4B,QAAQ,EAAGpB,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFrC,OAAA;MACI6B,IAAI,EAAC,UAAU;MACfC,KAAK,EAAEzB,QAAS;MAChB0B,QAAQ,EAAGpB,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFrC,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEf;AAACnC,EAAA,CAxDQD,aAAa;EAAA,QAGDH,WAAW;AAAA;AAAAwC,EAAA,GAHvBrC,aAAa;AA0DtB,eAAeA,aAAa;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}