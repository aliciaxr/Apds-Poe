{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tasha\\\\Downloads\\\\customer-portal (1)\\\\customer-portal\\\\Front-End\\\\src\\\\components\\\\EmployeeDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmployeeDashboard() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [showSubmitButton, setShowSubmitButton] = useState(null);\n  const [submittedTransactionId, setSubmittedTransactionId] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const authToken = localStorage.getItem('authToken');\n    if (!authToken) {\n      navigate('/employee-login');\n      return;\n    }\n    const fetchTransactions = async () => {\n      const response = await fetch('http://localhost:5000/api/transactions', {\n        headers: {\n          'Authorization': `Bearer ${authToken}`\n        }\n      });\n      const data = await response.json();\n      setTransactions(data);\n    };\n    fetchTransactions();\n  }, [navigate]);\n  const handleVerify = transactionId => {\n    // Change status to 'verifying' locally for the clicked transaction only\n    setTransactions(transactions.map(t => t.id === transactionId ? {\n      ...t,\n      status: 'verifying'\n    } : t));\n    // Only show the Submit button for the clicked transaction\n    setShowSubmitButton(transactionId);\n  };\n  const handleSubmitVerification = transactionId => {\n    // Directly set the submittedTransactionId and display the message\n    setSubmittedTransactionId(transactionId);\n\n    // Optionally, you could make an API call here to submit to SWIFT if needed\n    setTimeout(() => {\n      setSubmittedTransactionId(null); // Hide the message after a delay\n    }, 3000); // Hide the message after 3 seconds\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Employee Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          margin: 'auto',\n          borderCollapse: 'collapse',\n          width: '80%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Payee Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"SWIFT Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.currency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.payeeAccount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.swiftCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleVerify(transaction.id),\n                style: {\n                  backgroundColor: 'green',\n                  color: 'white',\n                  marginRight: '8px'\n                },\n                children: \"Verify\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this), showSubmitButton === transaction.id && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSubmitVerification(transaction.id),\n                style: {\n                  marginLeft: '8px'\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 41\n              }, this), submittedTransactionId === transaction.id && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'green',\n                  marginLeft: '10px',\n                  fontWeight: 'bold'\n                },\n                children: \"Submitted to SWIFT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)]\n          }, transaction.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeeDashboard, \"dRGkBQVIzEGOrXrG1lzvMJubG54=\", false, function () {\n  return [useNavigate];\n});\n_c = EmployeeDashboard;\nexport default EmployeeDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","EmployeeDashboard","_s","transactions","setTransactions","showSubmitButton","setShowSubmitButton","submittedTransactionId","setSubmittedTransactionId","navigate","authToken","localStorage","getItem","fetchTransactions","response","fetch","headers","data","json","handleVerify","transactionId","map","t","id","status","handleSubmitVerification","setTimeout","style","display","justifyContent","alignItems","height","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","margin","borderCollapse","width","transaction","amount","currency","payeeAccount","swiftCode","onClick","backgroundColor","color","marginRight","marginLeft","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/tasha/Downloads/customer-portal (1)/customer-portal/Front-End/src/components/EmployeeDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction EmployeeDashboard() {\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [showSubmitButton, setShowSubmitButton] = useState(null);\r\n    const [submittedTransactionId, setSubmittedTransactionId] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const authToken = localStorage.getItem('authToken');\r\n        if (!authToken) {\r\n            navigate('/employee-login');\r\n            return;\r\n        }\r\n\r\n        const fetchTransactions = async () => {\r\n            const response = await fetch('http://localhost:5000/api/transactions', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${authToken}`,\r\n                },\r\n            });\r\n            const data = await response.json();\r\n            setTransactions(data);\r\n        };\r\n\r\n        fetchTransactions();\r\n    }, [navigate]);\r\n\r\n    const handleVerify = (transactionId) => {\r\n        // Change status to 'verifying' locally for the clicked transaction only\r\n        setTransactions(transactions.map((t) =>\r\n            t.id === transactionId ? { ...t, status: 'verifying' } : t\r\n        ));\r\n        // Only show the Submit button for the clicked transaction\r\n        setShowSubmitButton(transactionId);\r\n    };\r\n\r\n    const handleSubmitVerification = (transactionId) => {\r\n        // Directly set the submittedTransactionId and display the message\r\n        setSubmittedTransactionId(transactionId);\r\n\r\n        // Optionally, you could make an API call here to submit to SWIFT if needed\r\n        setTimeout(() => {\r\n            setSubmittedTransactionId(null); // Hide the message after a delay\r\n        }, 3000); // Hide the message after 3 seconds\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n            <div>\r\n                <h1 style={{ textAlign: 'center' }}>Employee Dashboard</h1>\r\n                <table style={{ margin: 'auto', borderCollapse: 'collapse', width: '80%' }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Amount</th>\r\n                            <th>Currency</th>\r\n                            <th>Payee Account</th>\r\n                            <th>SWIFT Code</th>\r\n                            <th>Status</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {transactions.map((transaction) => (\r\n                            <tr key={transaction.id}>\r\n                                <td>{transaction.amount}</td>\r\n                                <td>{transaction.currency}</td>\r\n                                <td>{transaction.payeeAccount}</td>\r\n                                <td>{transaction.swiftCode}</td>\r\n                                <td>{transaction.status}</td>\r\n                                <td>\r\n                                    {/* Only show Verify button for the specific row */}\r\n                                    <button\r\n                                        onClick={() => handleVerify(transaction.id)}\r\n                                        style={{ backgroundColor: 'green', color: 'white', marginRight: '8px' }}\r\n                                    >\r\n                                        Verify\r\n                                    </button>\r\n\r\n                                    {/* Only show Submit button for the specific row */}\r\n                                    {showSubmitButton === transaction.id && (\r\n                                        <button\r\n                                            onClick={() => handleSubmitVerification(transaction.id)}\r\n                                            style={{ marginLeft: '8px' }}\r\n                                        >\r\n                                            Submit\r\n                                        </button>\r\n                                    )}\r\n\r\n                                    {/* Show Submitted to SWIFT message for the specific row */}\r\n                                    {submittedTransactionId === transaction.id && (\r\n                                        <span\r\n                                            style={{\r\n                                                color: 'green',\r\n                                                marginLeft: '10px',\r\n                                                fontWeight: 'bold',\r\n                                            }}\r\n                                        >\r\n                                            Submitted to SWIFT\r\n                                        </span>\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmployeeDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}